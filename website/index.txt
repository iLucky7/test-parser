h1. test-parser

h2. Overview

A collection of parsers for a variety of automated test systems.  Currently including support for "rspec":http://rspec.rubyforge.org/, "rubyunit":http://www.ruby-doc.org/stdlib/libdoc/test/unit/rdoc/classes/Test/Unit.html, "pyunit":http://pyunit.sourceforge.net/pyunit.html, and even preliminary support for Haskell's "quickCheck":http://www.cs.chalmers.se/~rjmh/QuickCheck/manual.html.

Parsing returns a data structure that describes the results of the testing, including detailed failure information.  Furthermore, this output is consistent across all of the parsers, allowing abstraction across different testing systems.

h2. Installing

<pre>sudo gem install test-parser</pre>

or perhaps

<pre>gem install test-parser</pre>

And yes, when you're asked, you do want those dependencies.

Of course, "ruby":http://www.ruby-lang.org/en/downloads/ and "gem":http://rubyforge.org/frs/?group_id=126 must be installed first.

h2. Demonstration of usage

Included is a script that will parse the output of a set of tests and print out a "YAML":http://www.yaml.org/ representation of the results.

Since we need a test suite to show this example on, we might as well test test-parser itself. <sup><a href='#note1' id='back1'>1</a></sup>


<pre><code></code>
<span class='command'>&#126;>> svn checkout svn://rubyforge.org/var/svn/test-parser/</span>
[...]
A    test-parser/README.txt
A    test-parser/examples
Checked out revision 11.
<span class='command'>&#126;>> cd test-parser</span>
<span class='command'>&#126;/test-parser>> test_parser </span>
usage: test_parser &lt;test_framework&gt;
  Frameworks:
     rspec
     rubyunit
     pyunit
     quickCheck
<span class='command'>&#126;/test_parser>> spec spec/test_parsers_spec.rb | test_parser rspec</span>
--- 
:success_count: 22
:failures: []

:failure_count: 0
:test_count: 22
</pre>

And thus you can see that test-parser has 22 tests, and all of them pass successfully.  More importantly, you could use YAML to get easy access to this information with another program in your toolchain.

You could do something equivalent in Ruby with something like the following:

<pre><code> </code>
<span class="ident">require</span> <span class="punct">&quot;</span><span class="string">test-parser</span><span class="punct">&quot;</span>
<span class="ident">test_file</span> <span class="punct">=</span> <span class="punct">&quot;</span><span class="string">spec/test_parsers_spec.rb</span><span class="punct">&quot;</span>
<span class="ident">parsed_test</span> <span class="punct">=</span> <span class="constant">TestParser</span><span class="punct">::</span><span class="constant">RSpec</span><span class="punct">.</span><span class="ident">parse</span><span class="punct">(</span><span class="ident">open</span><span class="punct">(&quot;</span><span class="string">|spec <span class="expr">#{test_file}</span></span><span class="punct">&quot;).</span><span class="ident">read</span><span class="punct">)</span>
<span class="ident">parsed_test</span><span class="punct">.</span><span class="ident">inspect</span> <span class="comment">#==&gt; {:test_count=&gt;22, :success_count=&gt;22, :failures=&gt;[], :failure_count=&gt;0}</span>







</pre>



<a href='#back1' id='note1'>1)</a> requires rspec, easily installed via <code>sudo gem install rspec</code>

h2. More Information

The output of the various parsers is consistent across a number of varied test systems. These test systems have different goals, methods, and levels of detail in their output.

That said, the output of the different parsers is very consistent and usable.  There's a list of guarantees on this data "here":parser_output.html.

h2. Forum

"http://groups.google.com/group/test-parser":http://groups.google.com/group/test-parser

Suggestions and bug reports welcome.  Or you can come and suggest the next test system to add :)


h2. How to submit patches

Read the "8 steps for fixing other people's code":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/ and for section "8b: Submit patch to Google Groups":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/#8b-google-groups, use the Google Group above.

The trunk repository is <code>svn://rubyforge.org/var/svn/test-parser/</code> for anonymous access.

h2. License

This code is free to use under the terms of "the MIT license":http://www.opensource.org/licenses/mit-license.php.  It is also released under "the Ruby License":http://www.ruby-lang.org/en/LICENSE.txt.

h2. Contact

Comments are welcome. Send an email to "Peter Burns":mailto:rictic@gmail.com.
